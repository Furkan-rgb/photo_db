{"version":3,"sources":["firebase.js","contexts/AuthContext.js","hooks/useFirestore2.js","components/Signup.js","hooks/useStorage.js","components/ProgressBar.js","hooks/useFirestore.js","components/ImageGrid.js","components/Dashboard.js","components/Login.js","components/ForgotPassword.js","components/UpdateProfile.js","components/privateRoute.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","deleteAccount","delete","updateDisplayName","userName","updateProfile","displayName","Provider","useFirestore2","collection","docs2","setDocs","unsub","onSnapshot","snap","documents","forEach","doc","push","data","id","useStyles","makeStyles","theme","root","margin","spacing","width","container","height","card","marginBottom","paddingBottom","inputField","maxWidth","Signup","classes","emailRef","useRef","passwordRef","passwordConfirmRef","displayNameRef","error","setError","history","useHistory","e","a","preventDefault","current","then","result","message","Grid","className","justify","alignItems","item","xs","sm","Card","direction","Typography","align","variant","component","Alert","severity","onSubmit","TextField","required","label","inputRef","textalign","type","autoComplete","Button","disabled","color","to","useStorage","file","progress","setProgress","url","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add","userID","uid","ProgressBar","setFile","console","log","style","useFirestore","docs","orderBy","ImageGrid","map","md","lg","src","alt","internalCardContainer","padding","mainContainer","input","display","info","marginTop","button","paddingTop","icon","fontSize","Dashboard","open","setOpen","handleClose","types","gutterBottom","accept","onChange","selected","target","files","includes","htmlFor","IconButton","aria-label","PhotoCamera","Link","onClick","startIcon","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Login","ForgotPassword","setMessage","UpdateProfile","promises","Promise","all","catch","finally","defaultValue","placeholder","InputLabelProps","shrink","PrivateRoute","Component","rest","render","props","minHeight","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bece4f20.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport \"firebase/auth\"\n\n//firebase authenticatie verkregen vanuit local env bestand\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n})\n\n//storage\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n//authenticatie\nexport const auth = app.auth()\n//firebase\nexport { app, projectFirestore, projectStorage, timestamp };","import React, { useContext, useState, useEffect } from 'react'\nimport { auth } from '../firebase'\nconst AuthContext = React.createContext()\n\n//useAuth hook\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    //create user\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n    //login function\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    //logout function\n    function logout() {\n        return auth.signOut()\n    }\n\n    //reset password\n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email)\n    }\n    // Update email\n    function updateEmail(email) {\n        return auth.currentUser.updateEmail(email)\n    }\n    // Update password\n    function updatePassword(password) {\n        return auth.currentUser.updatePassword(password)\n    }\n    //delete account\n    function deleteAccount() {\n        return auth.currentUser.delete()\n    }\n    //update displayname\n    function updateDisplayName(userName) {\n        return auth.currentUser.updateProfile({\n            displayName: userName,\n        })\n    }\n\n    //useEffect so you only run it when mounting component\n    useEffect(() => {\n        //firebase method to set current user\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            //no loading when there already is a user\n            setLoading(false)\n        })\n        return unsubscribe\n    }, [])\n\n    //Export\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword,\n        deleteAccount,\n        updateDisplayName,\n    }\n    return (\n        //value contains all the information you want to provide at authentication\n        //See above\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase';\n\n//This hook gets all documents saved in firestore collection\nconst useFirestore2 = (collection) => {\n    const [docs2, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n            // .orderBy('createdAt', 'desc')\n            .onSnapshot((snap) => {\n                let documents = [];\n                snap.forEach(doc => {\n                    // For each document push these data into documents\n                    documents.push({ ...doc.data(), id: doc.id })\n                });\n                setDocs(documents)\n            })\n        //unsub when no longer using collection\n        return () => unsub();\n    }, [collection])\n\n    return { docs2 };\n}\n\nexport default useFirestore2;","import React, { useRef, useState } from 'react';\nimport { TextField, Card, Button, Grid, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from \"react-router-dom\"\nimport useFirestore2 from '../hooks/useFirestore2'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n        width: '80%',\n    },\n    container: {\n        height: '100vh',\n    },\n    card: {\n        width: '100%',\n        //Below the card itself\n        marginBottom: 10,\n        //Below the signup button\n        paddingBottom: 5,\n    },\n    inputField: {\n        width: '100%',\n        maxWidth: 350,\n    }\n}));\n\nexport default function Signup() {\n    const classes = useStyles()\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const displayNameRef = useRef();;\n    const { signup, currentUser } = useAuth();\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n    const collectionRef = useFirestore2('accounts');\n\n\n\n    //handles the signup\n    //function that handles the submit info (email and password) and error handling (see useRef hooks)\n    async function handleSubmit(e) {\n        //preventDefault prevents refreshing\n        e.preventDefault()\n\n\n        //if both passwords are not the same\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return (\n                setError(\"Passwords do not match\")\n            )\n        }\n        // Sign up\n        try {\n            setError(\"\")\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n                .then(function (result) {\n                    return result.user.updateProfile({\n                        displayName: displayNameRef.current.value\n                    })\n                })\n\n            // .then(function (cred) {\n            //     return collectionRef.doc(cred.user.uid).set({\n            //         userID: currentUser.uid\n            //     })\n            // })\n\n            history.push(\"/\")\n\n            // Firebase signup error\n        } catch (error) {\n            setError(error.message);\n        }\n        setLoading(false)\n    }\n\n    return (\n        <Grid container className={classes.container} justify='center' alignItems='center'>\n            <Grid item xs={12} sm={6}>\n                <Card className={classes.card}>\n                    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" >\n                        <Typography align='center' variant=\"h3\" component=\"h2\">\n                            Sign up\n                        </Typography>\n                        {/* Errors */}\n                        {error && <Alert severity=\"error\">{error}</Alert>}\n                        <form onSubmit={handleSubmit} align='center' className={classes.root} >\n                            {/* Username + email */}\n                            <Grid item>\n                                {/* Username */}\n                                <TextField\n                                    className={classes.inputField}\n                                    required\n                                    id=\"display-name\"\n                                    label=\"Display Name\"\n                                    inputRef={displayNameRef}\n                                    textalign='center'\n                                />\n                                {/* Email */}\n                                <TextField\n                                    className={classes.inputField}\n                                    required\n                                    id=\"email-input\"\n                                    label=\"Email\"\n                                    inputRef={emailRef}\n                                    textalign='center'\n                                />\n                            </Grid>\n                            {/* Password */}\n                            <Grid item>\n                                <TextField\n                                    className={classes.inputField}\n                                    required\n                                    id=\"password-input\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    inputRef={passwordRef}\n                                />\n                            </Grid>\n                            {/* Password check */}\n                            <Grid item>\n                                <TextField\n                                    className={classes.inputField}\n                                    required\n                                    id=\"password-confirm\"\n                                    label=\"Password-confirm\"\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    inputRef={passwordConfirmRef}\n                                />\n                            </Grid>\n                            <Button disabled={loading} variant=\"contained\" color=\"primary\" type=\"submit\">\n                                Sign Up\n                            </Button>\n                        </form>\n                    </Grid>\n                </Card>\n                <Typography align='center' variant=\"subtitle1\" component=\"h2\">\n                    Already have an account? <Link to=\"/login\">Log in</Link>\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase'\nimport { useAuth } from '../contexts/AuthContext'\n\n//Upload file to firebase storage\nconst useStorage = (file) => {\n    //progress of load\n    const [progress, setProgress] = useState(0);\n    //any errors while uploading\n    const [error, setError] = useState(null);\n    //url after uploading\n    const [url, setUrl] = useState(null);\n    const { currentUser } = useAuth();\n    // const [user, setUser ]\n    //all the logic uploading the file\n    useEffect(() => {\n        //references\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n\n        //uploads the file with reference ^\n        //listener fires functions when state changes\n        //snapshot in time of the upload at that moment in time\n        storageRef.put(file).on('state_changed', (snap) => {\n            //percentage of the upload\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp();\n            collectionRef.add({ url, createdAt, userID: currentUser.uid })\n            setUrl(url);\n        })\n    }, [file, currentUser]) //everytime file changes this effect will fire\n    //these will be the the values you can access\n    return { progress, url, error }\n}\n\nexport default useStorage;\n","import React, { useEffect } from 'react'\nimport useStorage from '../hooks/useStorage'\n\nconst ProgressBar = ({ file, setFile }) => {\n    const { url, progress } = useStorage(file);\n    console.log(progress, url);\n\n    //if file is null there is no more progressbar\n    //so reset the file to null after obtaining a url, which means it has finished uploading\n    useEffect(() => {\n        if (url) {\n            setFile(null);\n        }\n    }, [url, setFile])\n\n    return (\n        <div className=\"progress-bar\" style={{ width: progress + '%' }}></div>\n    )\n}\nexport default ProgressBar;","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase';\n\n//This hook gets all documents saved in firestore collection\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc')\n            .onSnapshot((snap) => {\n                let documents = [];\n                snap.forEach(doc => {\n                    // For each document push these data into documents\n                    documents.push({ ...doc.data(), id: doc.id })\n                });\n                setDocs(documents)\n            })\n        //unsub when no longer using collection\n        return () => unsub();\n    }, [collection])\n\n    return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport useFirestore2 from '../hooks/useFirestore2'\nimport { Grid, Typography } from '@material-ui/core'\n\nconst ImageGrid = () => {\n    const { docs } = useFirestore('images')\n    const { docs2 } = useFirestore2('accounts')\n\n\n    console.log(docs2);\n\n    return <Grid container justify=\"center\">\n        {docs && docs.map(doc => (\n            <Grid className=\"img-item\" item key={doc.id} xs={12} md={6} lg={4}>\n                <img src={doc.url} alt=\"uploaded pic\" />\n                <Typography variant=\"subtitle1\"> By {doc.userID} </Typography>\n            </Grid>\n        ))}\n    </Grid>\n\n    // return <Grid container justify=\"center\">\n    //     {docs2.map((user) => (\n    //         <Grid className=\"img-item\" item key={user.userID} xs={12} md={6} lg={4}>\n    //             {docs\n    //                 .filter((image) => image.userID === user.userID)\n    //                 .map((image) => (\n    //                     <img\n    //                         src={image.url}\n    //                         key={`image-${user.userID}`}\n    //                         alt=\"uploaded pic\"\n    //                     />\n    //                 ))}\n    //             <Typography variant=\"subtitle1\"> By {user.userName} </Typography>\n    //         </Grid>\n    //     ))}\n    // </Grid>\n}\nexport default ImageGrid;","import React, { useState } from 'react'\nimport { Grid, Typography, Card, Button, makeStyles, IconButton } from \"@material-ui/core\"\nimport { PhotoCamera } from '@material-ui/icons'\nimport { Link, useHistory } from \"react-router-dom\"\nimport { Alert } from \"@material-ui/lab\"\nimport { useAuth } from '../contexts/AuthContext'\nimport ProgressBar from './ProgressBar'\nimport ImageGrid from './ImageGrid'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    internalCardContainer: {\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n        padding: 5,\n    },\n    mainContainer: {\n        width: '100%',\n    },\n    input: {\n        display: 'none',\n    },\n    info: {\n        width: \"100%\",\n    },\n    card: {\n        width: '100%',\n        maxWidth: 600,\n        marginTop: 5,\n        marginBottom: 5,\n    },\n    button: {\n        paddingTop: 5,\n        paddingBottom: 10,\n    },\n    icon: {\n        fontSize: '2em',\n    },\n}));\n\nexport default function Dashboard() {\n    const classes = useStyles()\n    const [error, setError] = useState(\"\")\n    const history = useHistory()\n    const { currentUser, logout, deleteAccount } = useAuth()\n\n    // Dialog box \n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    //Log out handler\n    async function handleLogout() {\n        setError('')\n        try {\n            await logout()\n            history.push('/login')\n        }\n        catch {\n            setError('Failed to logout')\n        }\n    }\n\n    //Delete account handler\n    async function handleDelete() {\n        setError('')\n        try {\n            await deleteAccount()\n            history.push('/login')\n        }\n        catch (error) {\n            setError(error.message)\n        }\n    }\n\n    //Store image hook\n    const [file, setFile] = useState(null);\n\n    //Allowed filetypes\n    const types = ['image/png', 'image/jpeg'];\n\n    //Image handler\n    //selected image\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n        //Check if a file is selected\n        if (selected && types.includes(selected.type)) {\n            //store the file\n            setFile(selected);\n            setError('');\n        }\n        else {\n            setFile(null);\n            setError('Please select an image file (png or jpeg)')\n        }\n    }\n\n    return (\n        // Main container with (Profile info and upload card) and (Image grid)\n        // <Grid container justify=\"center\" direction=\"column\" alignItems=\"flex-start\" className={classes.mainContainer}>\n        <Grid container justify=\"center\">\n\n            {/* Profile + upload card container */}\n            {/* <Grid container item xs={12} sm={8} justify=\"center\" direction=\"column\" alignItems=\"flex-start\"> */}\n            <Grid item xs={12} sm={8} align=\"center\">\n                <Card className={classes.card} align=\"center\">\n                    <Grid container direction=\"column\" className={classes.internalCardContainer}>\n                        {/* User info */}\n                        <Grid item align=\"center\">\n                            <Typography align=\"center\" gutterBottom variant=\"h2\">Storygram</Typography>\n                            <Typography>Email: {currentUser.email} </Typography>\n                            <Typography>Username: {currentUser.displayName} </Typography>\n                            <Typography>UserID: {currentUser.uid} </Typography>\n                        </Grid>\n\n                        {/* Error and file name message output */}\n                        <Grid item className={classes.info}>\n                            {/* If left statement then right statement.. */}\n                            {error && <Alert severity=\"error\">{error}</Alert>}\n                            {file && <Alert severity=\"info\">Selected image: {file.name}</Alert>}\n                            {file && <ProgressBar file={file} setFile={setFile} />}\n                        </Grid>\n\n                        {/* Upload image */}\n                        <Grid item align='center'>\n                            <input\n                                accept=\"image/*\"\n                                className={classes.input}\n                                id=\"icon-button-file\"\n                                type=\"file\"\n                                onChange={changeHandler}\n                            />\n                            <label htmlFor=\"icon-button-file\">\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" >\n                                    <PhotoCamera className={classes.icon} />\n                                </IconButton>\n                            </label>\n                        </Grid>\n\n                        {/* Update profile info */}\n                        <Grid item align='center' className={classes.button}>\n                            <Button variant=\"contained\" color=\"secondary\" component={Link} to={\"./UpdateProfile\"}>\n                                Update\n                            </Button>\n                        </Grid>\n\n                        {/* Logout button */}\n                        <Grid item align='center' className={classes.button}>\n                            <Button variant=\"contained\" onClick={handleLogout}>Log out</Button>\n                        </Grid>\n\n                        {/* Delete account button */}\n                        <Grid item align='center' className={classes.button}>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} startIcon={<DeleteIcon />}>\n                                Delete account\n                            </Button>\n                            <Dialog\n                                open={open}\n                                onClose={handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete your account?\"}</DialogTitle>\n                                <DialogContent>\n                                    <DialogContentText id=\"alert-dialog-description\">\n                                        Deleting your account can not be undone.\n                                </DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={handleClose} color=\"primary\">\n                                        Cancel\n                                    </Button>\n                                    <Button onClick={handleDelete} color=\"primary\" autoFocus>\n                                        Delete\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n            {/* </Grid> */}\n\n            {/* Image grid imported from ImageGrid.js*/}\n            <Grid item align=\"center\">\n                <ImageGrid />\n            </Grid>\n\n        </Grid >\n    )\n}\n","import React, { useRef, useState } from 'react';\nimport { TextField, Card, Button, Grid, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuth } from '../contexts/AuthContext';\n//useHistory hook for rerouting to dashboard after login\nimport { Link, useHistory } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n        width: '80%',\n    },\n    container: {\n        height: '100vh',\n    },\n    card: {\n        width: '100%',\n        //Below the card itself\n        marginBottom: 10,\n        //Below the signup button\n        paddingBottom: 5,\n    },\n    inputField: {\n        width: '100%',\n        maxWidth: 350,\n    }\n}));\n\nexport default function Login() {\n    const classes = useStyles()\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    //handles the signup\n    //function that handles the submit info (email and password) and error handling (see useRef hooks)\n    async function handleSubmit(e) {\n        //preventDefault prevents refreshing\n        e.preventDefault();\n        try {\n            setError(\"\");\n            setLoading(true);\n            //login logic\n            await login(emailRef.current.value, passwordRef.current.value);\n            history.push(\"/\");\n        } catch {\n            setError(\"Failed to log in\");\n        }\n        setLoading(false);\n    }\n\n    return (\n        <Grid container className={classes.container} justify='center' alignItems='center'>\n            <Grid item xs={12} sm={6}>\n                <Card className={classes.card}>\n                    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" >\n                        <Typography align='center' variant=\"h3\" component=\"h2\">\n                            Login\n                        </Typography>\n                        {error && <Alert severity=\"error\">{error}</Alert>}\n                        <form onSubmit={handleSubmit} align='center' className={classes.root} >\n                            <Grid item>\n                                <TextField\n                                    className={classes.inputField}\n                                    required\n                                    id=\"email-input\"\n                                    label=\"Email\"\n                                    inputRef={emailRef}\n                                    textalign='center'\n                                />\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    className={classes.inputField}\n                                    required\n                                    id=\"password-input\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    inputRef={passwordRef}\n                                />\n                            </Grid>\n                            <Button disabled={loading} variant=\"contained\" color=\"primary\" type=\"submit\">\n                                Login\n                            </Button>\n                            <Typography><Link to='/forgot-password'>Forgot password?</Link></Typography>\n                        </form>\n                    </Grid>\n                </Card>\n                <Typography align='center' variant=\"subtitle1\" component=\"h2\">\n                    Need an account? <Link to=\"/signup\">Sign up</Link>\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useRef, useState } from 'react';\nimport { TextField, Card, Button, Grid, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuth } from '../contexts/AuthContext';\n//useHistory hook for rerouting to dashboard after login\nimport { Link } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n        width: '80%',\n    },\n    container: {\n        height: '100vh',\n    },\n    card: {\n        width: '100%',\n        //Below the card itself\n        marginBottom: 10,\n        //Below the signup button\n        paddingBottom: 5,\n    },\n    inputField: {\n        width: '100%',\n        maxWidth: 350,\n    }\n}));\n\nexport default function ForgotPassword() {\n    const classes = useStyles()\n\n    const emailRef = useRef()\n    const { resetPassword } = useAuth()\n    const [error, setError] = useState('')\n    const [message, setMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n\n\n    //handles the signup\n    //function that handles the submit info (email and password) and error handling (see useRef hooks)\n    async function handleSubmit(e) {\n        //preventDefault prevents refreshing\n        e.preventDefault()\n        try {\n            setMessage('')\n            setError(\"\")\n            setLoading(true)\n            //reset \n            await resetPassword(emailRef.current.value)\n            setMessage('Check your email')\n        } catch {\n            setError(\"Failed to reset password\")\n        }\n        setLoading(false)\n    }\n\n    return (\n        <Grid container className={classes.container} justify='center' alignItems='center'>\n            <Grid item xs={12} sm={6}>\n                <Card className={classes.card}>\n                    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" >\n                        <Typography align='center' variant=\"h3\" component=\"h2\">\n                            Reset Password\n                        </Typography>\n                        {error && <Alert severity=\"error\">{error}</Alert>}\n                        {message && <Alert severity=\"success\">{message}</Alert>}\n                        <form onSubmit={handleSubmit} align='center' className={classes.root} >\n                            <Grid item>\n                                <TextField\n                                    className={classes.inputField}\n                                    required\n                                    id=\"email-input\"\n                                    label=\"Email\"\n                                    inputRef={emailRef}\n                                    textalign='center'\n                                />\n                            </Grid>\n                            <Button disabled={loading} variant=\"contained\" color=\"primary\" type=\"submit\">\n                                Reset Password\n                            </Button>\n                            <Typography><Link to='/login'>Login</Link></Typography>\n                        </form>\n                    </Grid>\n                </Card>\n                <Typography align='center' variant=\"subtitle1\" component=\"h2\">\n                    Need an account? <Link to=\"/signup\">Sign up</Link>\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useRef, useState } from 'react';\nimport { TextField, Card, Button, Grid, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from \"react-router-dom\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n        width: '80%',\n    },\n    container: {\n        height: '100vh',\n    },\n    card: {\n        width: '100%',\n        //Below the card itself\n        marginBottom: 10,\n        //Below the signup button\n        paddingBottom: 5,\n    },\n    inputField: {\n        width: '100%',\n        maxWidth: 350,\n    }\n}));\n\nexport default function UpdateProfile() {\n    const classes = useStyles()\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const displayNameRef = useRef();\n    const { currentUser, updatePassword, updateEmail, updateDisplayName } = useAuth();\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n\n    //handles the signup\n    //function that handles the submit info (email and password) and error handling (see useRef hooks)\n    function handleSubmit(e) {\n        //preventDefault prevents refreshing\n        e.preventDefault()\n        //if both passwords are not the same\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError(\"Passwords do not match\")\n        }\n        //wait untill all promises finish before throwing errors\n        const promises = []\n        setLoading(true)\n        setError(\"\")\n\n        //Update email\n        //if  email is not equal to current email\n        if (emailRef.current.value !== currentUser.email) {\n            //update email with current value\n            promises.push(updateEmail(emailRef.current.value))\n        }\n\n        //Update Username\n        //if  username is not equal to current username\n        if (displayNameRef.current.value !== currentUser.displayName) {\n            //update username with current value\n            promises.push(updateDisplayName(displayNameRef.current.value))\n        }\n\n        //Update password\n        //update password with current value (if there is a value ofcourse)\n        if (passwordRef.current.value) {\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        //if all promises are succsful redirect to homepage\n        Promise.all(promises).then(() => {\n            history.push('/')\n            //catch the error\n        }).catch((error) => {\n            setError(error.message)\n            //setLoading state to false again\n        }).finally(() => {\n            setLoading(false)\n        })\n    }\n\n    return (\n        <Grid container className={classes.container} justify='center' alignItems='center'>\n            <Grid item xs={12} sm={6}>\n                <Card className={classes.card}>\n                    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" >\n                        <Typography align='center' variant=\"h3\" component=\"h2\">\n                            Update Profile\n                        </Typography>\n                        {error && <Alert severity=\"error\">{error}</Alert>}\n                        <form onSubmit={handleSubmit} align='center' className={classes.root} >\n                            {/* Grid item for username and email */}\n                            <Grid item>\n                                {/* Username */}\n                                <TextField\n                                    className={classes.inputField}\n                                    id=\"display-name\"\n                                    label=\"Display Name\"\n                                    inputRef={displayNameRef}\n                                    textalign='center'\n                                    defaultValue={currentUser.displayName}\n                                    placeholder=\"Leave empty to keep the same\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                                {/* Email */}\n                                <TextField\n                                    className={classes.inputField}\n                                    required\n                                    id=\"email-input\"\n                                    label=\"Email\"\n                                    inputRef={emailRef}\n                                    textalign='center'\n                                    defaultValue={currentUser.email}\n                                />\n                            </Grid>\n                            {/* Password */}\n                            <Grid item>\n                                <TextField\n                                    className={classes.inputField}\n                                    id=\"password-input\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    inputRef={passwordRef}\n                                    placeholder=\"Leave empty to keep the same\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            {/* Password check */}\n                            <Grid item>\n                                <TextField\n                                    className={classes.inputField}\n                                    id=\"password-confirm\"\n                                    label=\"Password-confirm\"\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    inputRef={passwordConfirmRef}\n                                    placeholder=\"Leave empty to keep the same\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Button disabled={loading} variant=\"contained\" color=\"primary\" type=\"submit\">\n                                Update\n                            </Button>\n                        </form>\n                    </Grid>\n                </Card>\n                <Typography align='center' variant=\"subtitle1\" component=\"h2\">\n                    <Link to=\"/\">Cancel</Link>\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n    const { currentUser } = useAuth()\n\n    return (\n        //This is important as to not render the dashboard component when no user is logged in or after logging out\n        <Route\n            {...rest}\n            //If there is a current user then render out the component\n            //If there is no user, redirect to login page \n            render={props => {\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n            }}\n        ></Route>\n    )\n}","import { AuthProvider } from \"../contexts/AuthContext\";\nimport Signup from \"./Signup\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Login\";\nimport ForgotPassword from \"./ForgotPassword\"\nimport UpdateProfile from \"./UpdateProfile\"\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Grid, makeStyles } from '@material-ui/core'\nimport PrivateRoute from './privateRoute'\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    minHeight: '100vh',\n    width: '100vw',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles()\n  return (\n    <Grid container className={classes.container}>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute exact path=\"/UpdateProfile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </Grid>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}